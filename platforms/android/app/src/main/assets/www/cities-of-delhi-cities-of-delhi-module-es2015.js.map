{"version":3,"sources":["./node_modules/ngx-pipes/fesm2015/ngx-pipes.js","./src/app/cities-of-delhi/cities-of-delhi.page.html","./src/app/cities-of-delhi/cities-of-delhi.module.ts","./src/app/cities-of-delhi/cities-of-delhi.page.scss","./src/app/cities-of-delhi/cities-of-delhi.page.ts"],"names":[],"mappingsmC;AACY;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,IAAI,0DAAI,EAAE,uBAAuB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAU;AAC1B,IAAI,0DAAI,EAAE,mBAAmB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa,wDAAU;AACvB,IAAI,0DAAI,EAAE,iBAAiB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,6BAA6B;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAU;AACvB,IAAI,0DAAI,EAAE,iBAAiB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,0DAAI,EAAE,mBAAmB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAU;AACxC,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI,0DAAI,EAAE,qCAAqC;AAC/C;;AAEA;AACA;AACA;AACA,qBAAqB,wDAAU;AAC/B,IAAI,0DAAI,EAAE,sCAAsC;AAChD;;AAEA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI,0DAAI,EAAE,qCAAqC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA,gBAAgB,wDAAU;AAC1B,IAAI,0DAAI,EAAE,oBAAoB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAU;AAC/B,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAU;AACvB,IAAI,0DAAI,EAAE,iBAAiB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD,SAAS,IAAI;AACb;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD,SAAS,IAAI;AACb;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD,SAAS,IAAI;AACb;AACA;AACA,aAAa,wDAAU;AACvB,IAAI,0DAAI,EAAE,iBAAiB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,aAAa;AAChG,SAAS,IAAI;AACb;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,0DAAI,EAAE,mBAAmB;AAC7B;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA,sBAAsB,wDAAU;AAChC,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD,GAAG,aAAa;AAC3F;AACA;AACA,wDAAwD,aAAa,SAAS,aAAa;AAC3F;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wDAAU;AACvB,IAAI,0DAAI,EAAE,iBAAiB;AAC3B;;AAEA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA,gBAAgB,wDAAU;AAC1B,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA,gBAAgB,wDAAU;AAC1B,IAAI,0DAAI,EAAE,oBAAoB;AAC9B;;AAEA;AACA;AACA,6DAA6D,MAAM,MAAM,MAAM;AAC/E;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,0DAAI,EAAE,mBAAmaAAa;AACb;AACA;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,0DAAI,EAAE,mBAAmB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C,aAAa;AACb;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,IAAI,0DAAI,EAAE,qBAAqB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AACluBAAuB,wDAAU;AACjC,IAAI,0DAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAU;AAChC,IAAI,8DAAQ;AACZ;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAU;AACpB,IAAI,0DAAI,EAAE,cAAc;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAU;AACpB,IAAI,0DAAI,EAAE,cAAc;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,IAAI,0DAAI,EAAE,qBAAqB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAU;AACpB,IAAI,0DAAI,EAAE,cAAc;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,cAAc;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,IAAI,0DAAI,EAAE,eAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,2BAA2B;AACxC,aAAa,8BAA8B;AAC3C,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,IAAI,GAAG,YAAY;AACrC;AACA;AACA,YAAY,wDAAU;AACtB,IAAI,0DAAI,EAAE,gBAAgB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAU;AACxB,IAAI,0DAAI,EAAE,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"cities-of-delhi-cities-of-delhi-module-es2015.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { Pipe, NgModule } from '@angular/core';\n\nlet DiffPipe = class DiffPipe {\n    transform(input, ...args) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        // tslint:disable-next-line no-bitwise\n        return args.reduce((d, c) => d.filter((e) => !~c.indexOf(e)), input);\n    }\n};\nDiffPipe = __decorate([\n    Pipe({ name: 'diff' })\n], DiffPipe);\n\nlet InitialPipe = class InitialPipe {\n    transform(input, num = 0) {\n        return Array.isArray(input) ? input.slice(0, input.length - num) : input;\n    }\n};\nInitialPipe = __decorate([\n    Pipe({ name: 'initial' })\n], InitialPipe);\n\nlet FlattenPipe = class FlattenPipe {\n    transform(input, shallow = false) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        return shallow ? [].concat.apply([], input) : this.flatten(input);\n    }\n    flatten(array) {\n        return array.reduce((arr, elm) => {\n            if (Array.isArray(elm)) {\n                return arr.concat(this.flatten(elm));\n            }\n            return arr.concat(elm);\n        }, []);\n    }\n};\nFlattenPipe = __decorate([\n    Pipe({ name: 'flatten' })\n], FlattenPipe);\n\nlet IntersectionPipe = class IntersectionPipe {\n    transform(input, ...args) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        // tslint:disable-next-line no-bitwise\n        return args.reduce((n, c) => n.filter((e) => !!~c.indexOf(e)), input);\n    }\n};\nIntersectionPipe = __decorate([\n    Pipe({ name: 'intersection' })\n], IntersectionPipe);\n\nfunction isUndefined(value) {\n    return typeof value === 'undefined';\n}\nfunction isNull(value) {\n    return value === null;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\nfunction isNumberFinite(value) {\n    return isNumber(value) && isFinite(value);\n}\nfunction isVowel(letter) {\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    return vowels.indexOf(letter) !== -1;\n}\nfunction ucFirst(text) {\n    const [part, ...split] = text.split(/\\s/g);\n    const ucd = part\n        .toLowerCase()\n        .split(/(?=['|-])/g)\n        .map((word) => word.indexOf('-') + word.indexOf(\"'\") > -2\n        ? word.slice(0, 2).toUpperCase() + word.slice(2)\n        : word.slice(0, 1).toUpperCase() + word.slice(1))\n        .join('');\n    return [ucd, ...split].join(' ');\n}\nfunction applyPrecision(num, precision) {\n    if (precision <= 0) {\n        return Math.round(num);\n    }\n    const tho = Math.pow(10, precision);\n    return Math.round(num * tho) / tho;\n}\nfunction extractDeepPropertyByMapKey(obj, map) {\n    const keys = map.split('.');\n    const head = keys.shift();\n    return keys.reduce((prop, key) => {\n        return !isUndefined(prop) && !isNull(prop) && !isUndefined(prop[key]) ? prop[key] : undefined;\n    }, obj[head || '']);\n}\nfunction extractDeepPropertyByParentMapKey(obj, map) {\n    const keys = map.split('.');\n    const tail = keys.pop();\n    const props = extractDeepPropertyByMapKey(obj, keys.join('.'));\n    return { props, tail };\n}\nfunction getKeysTwoObjects(obj, other) {\n    return [...Object.keys(obj), ...Object.keys(other)].filter((key, index, array) => array.indexOf(key) === index);\n}\nfunction isDeepEqual(obj, other) {\n    if (!isObject(obj) || !isObject(other)) {\n        return obj === other;\n    }\n    return getKeysTwoObjects(obj, other).every((key) => {\n        if (!isObject(obj[key]) && !isObject(other[key])) {\n            return obj[key] === other[key];\n        }\n        if (!isObject(obj[key]) || !isObject(other[key])) {\n            return false;\n        }\n        return isDeepEqual(obj[key], other[key]);\n    });\n}\n\nlet ReversePipe = class ReversePipe {\n    transform(input) {\n        if (isString(input)) {\n            return input\n                .split('')\n                .reverse()\n                .join('');\n        }\n        return Array.isArray(input) ? input.slice().reverse() : input;\n    }\n};\nReversePipe = __decorate([\n    Pipe({ name: 'reverse' })\n], ReversePipe);\n\nlet TailPipe = class TailPipe {\n    transform(input, num = 0) {\n        return Array.isArray(input) ? input.slice(num) : input;\n    }\n};\nTailPipe = __decorate([\n    Pipe({ name: 'tail' })\n], TailPipe);\n\nlet TrurthifyPipe = class TrurthifyPipe {\n    transform(input) {\n        return Array.isArray(input) ? input.filter(e => !!e) : input;\n    }\n};\nTrurthifyPipe = __decorate([\n    Pipe({ name: 'truthify' })\n], TrurthifyPipe);\n\nlet UnionPipe = class UnionPipe {\n    transform(input, args = []) {\n        if (!Array.isArray(input) || !Array.isArray(args)) {\n            return input;\n        }\n        return args.reduce((newArr, currArr) => {\n            return newArr.concat(currArr.reduce((noDupArr, curr) => {\n                // tslint:disable-next-line:no-bitwise\n                return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;\n            }, []));\n        }, input);\n    }\n};\nUnionPipe = __decorate([\n    Pipe({ name: 'union' })\n], UnionPipe);\n\nlet UniquePipe = class UniquePipe {\n    transform(input, propertyName) {\n        const uniques = [];\n        return Array.isArray(input)\n            ? isUndefined(propertyName)\n                ? input.filter((e, i) => input.indexOf(e) === i)\n                : input.filter((e, i) => {\n                    let value = extractDeepPropertyByMapKey(e, propertyName);\n                    value = isObject(value) ? JSON.stringify(value) : value;\n                    if (isUndefined(value) || uniques[value]) {\n                        return false;\n                    }\n                    uniques[value] = true;\n                    return true;\n                })\n            : input;\n    }\n};\nUniquePipe = __decorate([\n    Pipe({ name: 'unique' })\n], UniquePipe);\n\nlet WithoutPipe = class WithoutPipe {\n    transform(input, args = []) {\n        return Array.isArray(input)\n            ? // tslint:disable-next-line:no-bitwise\n                input.filter(e => !~args.indexOf(e))\n            : input;\n    }\n};\nWithoutPipe = __decorate([\n    Pipe({ name: 'without' })\n], WithoutPipe);\n\nlet PluckPipe = class PluckPipe {\n    transform(input, map) {\n        if (Array.isArray(input)) {\n            return input.map(e => extractDeepPropertyByMapKey(e, map));\n        }\n        return isObject(input) ? extractDeepPropertyByMapKey(input, map) : input;\n    }\n};\nPluckPipe = __decorate([\n    Pipe({ name: 'pluck', pure: false })\n], PluckPipe);\n\nlet ShufflePipe = class ShufflePipe {\n    // Using a version of the Fisher-Yates shuffle algorithm\n    // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n    transform(input) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        const shuffled = [...input];\n        const n = input.length - 1;\n        for (let i = 0; i < n; ++i) {\n            const j = Math.floor(Math.random() * (n - i + 1)) + i;\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n        }\n        return shuffled;\n    }\n};\nShufflePipe = __decorate([\n    Pipe({ name: 'shuffle' })\n], ShufflePipe);\n\nlet EveryPipe = class EveryPipe {\n    transform(input, predicate) {\n        return Array.isArray(input) ? input.every(predicate) : false;\n    }\n};\nEveryPipe = __decorate([\n    Pipe({ name: 'every' })\n], EveryPipe);\n\nlet SomePipe = class SomePipe {\n    transform(input, predicate) {\n        return Array.isArray(input) ? input.some(predicate) : input;\n    }\n};\nSomePipe = __decorate([\n    Pipe({ name: 'some' })\n], SomePipe);\n\nlet SamplePipe = class SamplePipe {\n    transform(input, len = 1) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        let sample = [];\n        const tmp = [...input];\n        const l = len < tmp.length ? len : tmp.length;\n        for (let i = 0; i < l; ++i) {\n            sample = sample.concat(tmp.splice(Math.floor(Math.random() * tmp.length), 1));\n        }\n        return sample;\n    }\n};\nSamplePipe = __decorate([\n    Pipe({ name: 'sample' })\n], SamplePipe);\n\nlet GroupByPipe = class GroupByPipe {\n    transform(input, discriminator = [], delimiter = '|') {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        return this.groupBy(input, discriminator, delimiter);\n    }\n    groupBy(list, discriminator, delimiter) {\n        return list.reduce((acc, payload) => {\n            const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);\n            acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];\n            return acc;\n        }, {});\n    }\n    extractKeyByDiscriminator(discriminator, payload, delimiter) {\n        if (isFunction(discriminator)) {\n            return discriminator(payload);\n        }\n        if (Array.isArray(discriminator)) {\n            return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);\n        }\n        return extractDeepPropertyByMapKey(payload, discriminator);\n    }\n};\nGroupByPipe = __decorate([\n    Pipe({ name: 'groupBy' })\n], GroupByPipe);\n\n// tslint:disable no-bitwise\nlet FilterByPipe = class FilterByPipe {\n    transform(input, props, search = '', strict = false) {\n        if (!Array.isArray(input) ||\n            (!Array.isArray(search) && !isString(search) && !isNumberFinite(search) && !isBoolean(search))) {\n            return input;\n        }\n        const terms = String(search)\n            .toLowerCase()\n            .split(',');\n        return input.filter(obj => {\n            return props.some(prop => {\n                return terms.some(term => {\n                    const value = extractDeepPropertyByMapKey(obj, prop);\n                    /* tslint:disable */\n                    const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);\n                    if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {\n                        return props.some(parent => {\n                            const str = String(parent[tail]).toLowerCase();\n                            return strict ? str === term : !!~str.indexOf(term);\n                        });\n                    }\n                    if (isUndefined(value)) {\n                        return false;\n                    }\n                    const strValue = String(value).toLowerCase();\n                    return strict ? term === strValue : !!~strValue.indexOf(term);\n                });\n            });\n        });\n    }\n};\nFilterByPipe = __decorate([\n    Pipe({ name: 'filterBy' })\n], FilterByPipe);\n\nvar OrderByPipe_1;\nlet OrderByPipe = OrderByPipe_1 = class OrderByPipe {\n    transform(input, config) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        const out = [...input];\n        // sort by multiple properties\n        if (Array.isArray(config)) {\n            return out.sort((a, b) => {\n                const l = config.length;\n                for (let i = 0; i < l; ++i) {\n                    const [prop, asc] = OrderByPipe_1.extractFromConfig(config[i]);\n                    const pos = OrderByPipe_1.orderCompare(prop, asc, a, b);\n                    if (pos !== 0) {\n                        return pos;\n                    }\n                }\n                return 0;\n            });\n        }\n        // sort by a single property value\n        if (isString(config)) {\n            const [prop, asc, sign] = OrderByPipe_1.extractFromConfig(config);\n            if (config.length === 1) {\n                // tslint:disable-next-line:switch-default\n                switch (sign) {\n                    case '+':\n                        return out.sort(OrderByPipe_1.simpleSort.bind(this));\n                    case '-':\n                        return out.sort(OrderByPipe_1.simpleSort.bind(this)).reverse();\n                }\n            }\n            return out.sort(OrderByPipe_1.orderCompare.bind(this, prop, asc));\n        }\n        // default sort by value\n        return out.sort(OrderByPipe_1.simpleSort.bind(this));\n    }\n    static simpleSort(a, b) {\n        return isString(a) && isString(b) ? a.toLowerCase().localeCompare(b.toLowerCase()) : a - b;\n    }\n    static orderCompare(prop, asc, a, b) {\n        const first = extractDeepPropertyByMapKey(a, prop);\n        const second = extractDeepPropertyByMapKey(b, prop);\n        if (first === second) {\n            return 0;\n        }\n        if (isUndefined(first) || first === '') {\n            return 1;\n        }\n        if (isUndefined(second) || second === '') {\n            return -1;\n        }\n        if (isString(first) && isString(second)) {\n            const pos = first.toLowerCase().localeCompare(second.toLowerCase());\n            return asc ? pos : -pos;\n        }\n        return asc ? first - second : second - first;\n    }\n    static extractFromConfig(config) {\n        const sign = config.substr(0, 1);\n        const prop = config.replace(/^[-+]/, '');\n        const asc = sign !== '-';\n        return [prop, asc, sign];\n    }\n};\nOrderByPipe = OrderByPipe_1 = __decorate([\n    Pipe({ name: 'orderBy' })\n], OrderByPipe);\n\n// tslint:disable use-pipe-transform-interface\nlet GroupByImpurePipe = class GroupByImpurePipe extends GroupByPipe {\n};\nGroupByImpurePipe = __decorate([\n    Pipe({ name: 'groupByImpure', pure: false })\n], GroupByImpurePipe);\n\n// tslint:disable use-pipe-transform-interface\nlet FilterByImpurePipe = class FilterByImpurePipe extends FilterByPipe {\n};\nFilterByImpurePipe = __decorate([\n    Pipe({ name: 'filterByImpure', pure: false })\n], FilterByImpurePipe);\n\n// tslint:disable use-pipe-transform-interface\nlet OrderByImpurePipe = class OrderByImpurePipe extends OrderByPipe {\n};\nOrderByImpurePipe = __decorate([\n    Pipe({ name: 'orderByImpure', pure: false })\n], OrderByImpurePipe);\n\nlet RangePipe = class RangePipe {\n    transform(start = 1, count = 0, step = 1) {\n        return Array(count)\n            .fill('')\n            .map((v, i) => step * i + start);\n    }\n};\nRangePipe = __decorate([\n    Pipe({ name: 'range' })\n], RangePipe);\n\nlet ChunkPipe = class ChunkPipe {\n    transform(input, size = 1) {\n        if (isString(input)) {\n            return this.chunk(input\n                .split(''), size);\n        }\n        return Array.isArray(input) ? this.chunk(input, size) : input;\n    }\n    chunk(input, size) {\n        return Array(Math.ceil(input.length / size))\n            .fill([])\n            .map((_, index) => index * size)\n            .map(begin => input.slice(begin, begin + size));\n    }\n};\nChunkPipe = __decorate([\n    Pipe({ name: 'chunk' })\n], ChunkPipe);\n\nlet FromPairsPipe = class FromPairsPipe {\n    transform(input) {\n        if (!Array.isArray(input)) {\n            return input;\n        }\n        return input.reduce((obj, arr) => {\n            if (!Array.isArray(arr)) {\n                return obj;\n            }\n            const [prop, val] = arr;\n            obj[prop] = val;\n            return obj;\n        }, {});\n    }\n};\nFromPairsPipe = __decorate([\n    Pipe({ name: 'fromPairs' })\n], FromPairsPipe);\n\nconst ARRAY_PIPES = [\n    DiffPipe,\n    FlattenPipe,\n    InitialPipe,\n    IntersectionPipe,\n    ReversePipe,\n    TailPipe,\n    TrurthifyPipe,\n    UnionPipe,\n    UniquePipe,\n    WithoutPipe,\n    PluckPipe,\n    ShufflePipe,\n    EveryPipe,\n    SomePipe,\n    SamplePipe,\n    GroupByPipe,\n    GroupByImpurePipe,\n    FilterByPipe,\n    FilterByImpurePipe,\n    OrderByPipe,\n    OrderByImpurePipe,\n    RangePipe,\n    ChunkPipe,\n    FromPairsPipe\n];\nlet NgArrayPipesModule = class NgArrayPipesModule {\n};\nNgArrayPipesModule = __decorate([\n    NgModule({\n        declarations: ARRAY_PIPES,\n        imports: [],\n        exports: ARRAY_PIPES,\n    })\n], NgArrayPipesModule);\n\nlet KeysPipe = class KeysPipe {\n    transform(obj) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return Object.keys(obj);\n    }\n};\nKeysPipe = __decorate([\n    Pipe({ name: 'keys' })\n], KeysPipe);\n\nlet ValuesPipe = class ValuesPipe {\n    transform(obj) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return Object.keys(obj).map(k => obj[k]);\n    }\n};\nValuesPipe = __decorate([\n    Pipe({ name: 'values' })\n], ValuesPipe);\n\nlet PairsPipe = class PairsPipe {\n    transform(obj) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return Object.entries(obj);\n    }\n};\nPairsPipe = __decorate([\n    Pipe({ name: 'pairs' })\n], PairsPipe);\n\nlet PickPipe = class PickPipe {\n    transform(obj, ...args) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return args.reduce((o, k) => {\n            return Object.assign(o, { [k]: obj[k] });\n        }, {});\n    }\n};\nPickPipe = __decorate([\n    Pipe({ name: 'pick' })\n], PickPipe);\n\nlet OmitPipe = class OmitPipe {\n    transform(obj, ...args) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return (Object.keys(obj)\n            // tslint:disable-next-line:no-bitwise\n            .filter(k => !~args.indexOf(k))\n            .reduce((o, k) => {\n            return Object.assign(o, { [k]: obj[k] });\n        }, {}));\n    }\n};\nOmitPipe = __decorate([\n    Pipe({ name: 'omit' })\n], OmitPipe);\n\nlet InvertPipe = class InvertPipe {\n    transform(obj) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return Object.keys(obj).reduce((o, k) => {\n            return Object.assign(o, { [obj[k]]: k });\n        }, {});\n    }\n};\nInvertPipe = __decorate([\n    Pipe({ name: 'invert' })\n], InvertPipe);\n\nlet InvertByPipe = class InvertByPipe {\n    transform(obj, cb) {\n        if (Array.isArray(obj) || !isObject(obj)) {\n            return obj;\n        }\n        return Object.keys(obj).reduce((o, k) => {\n            const key = cb ? cb(obj[k]) : obj[k];\n            return Array.isArray(o[key]) ? (o[key].push(k), o) : Object.assign(o, { [key]: [k] });\n        }, {});\n    }\n};\nInvertByPipe = __decorate([\n    Pipe({ name: 'invertBy' })\n], InvertByPipe);\n\nlet DiffObjPipe = class DiffObjPipe {\n    transform(obj, original = {}) {\n        if (Array.isArray(obj) || Array.isArray(original) || !isObject(obj) || !isObject(original)) {\n            return {};\n        }\n        return getKeysTwoObjects(obj, original).reduce((diff, key) => {\n            if (!isDeepEqual(original[key], obj[key])) {\n                diff[key] = obj[key];\n            }\n            return diff;\n        }, {});\n    }\n};\nDiffObjPipe = __decorate([\n    Pipe({ name: 'diffObj' })\n], DiffObjPipe);\n\nconst OBJECT_PIPES = [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe];\nlet NgObjectPipesModule = class NgObjectPipesModule {\n};\nNgObjectPipesModule = __decorate([\n    NgModule({\n        declarations: OBJECT_PIPES,\n        imports: [],\n        exports: OBJECT_PIPES,\n    })\n], NgObjectPipesModule);\n\nlet AorAnPipe = \n/**\n * Takes a string and returns the string prepended by 'a' or 'an'.\n * Uses both naive and holdout-list approaches.\n * @constructor\n * @param {string} stringEntity - Entity to prepend 'a' or 'an' to.\n */\nclass AorAnPipe {\n    constructor() {\n        this.irregularMap = {\n            herb: 'an',\n            honor: 'an',\n            honorable: 'an',\n            hour: 'an',\n            mba: 'an',\n            msc: 'an',\n            'm.sc.': 'an',\n            unicorn: 'a',\n        };\n    }\n    transform(stringEntity) {\n        if (!stringEntity || stringEntity === '') {\n            return '';\n        }\n        else {\n            const firstWord = stringEntity.trim().split(' ')[0];\n            if (this.irregularMap[firstWord.toLocaleLowerCase()]) {\n                return `${this.irregularMap[firstWord.toLocaleLowerCase()]} ${stringEntity}`;\n            }\n            else {\n                return isVowel(stringEntity[0]) ? `an ${stringEntity}` : `a ${stringEntity}`;\n            }\n        }\n    }\n};\nAorAnPipe = __decorate([\n    Pipe({\n        name: 'aOrAn',\n    })\n    /**\n     * Takes a string and returns the string prepended by 'a' or 'an'.\n     * Uses both naive and holdout-list approaches.\n     * @constructor\n     * @param {string} stringEntity - Entity to prepend 'a' or 'an' to.\n     */\n], AorAnPipe);\n\nlet UcWordsPipe = class UcWordsPipe {\n    transform(text) {\n        if (isString(text)) {\n            return text\n                .split(' ')\n                .map((sub) => ucFirst(sub))\n                .join(' ');\n        }\n        return text;\n    }\n};\nUcWordsPipe = __decorate([\n    Pipe({ name: 'ucwords' })\n], UcWordsPipe);\n\nlet LeftTrimPipe = class LeftTrimPipe {\n    transform(text, chars = '\\\\s') {\n        return isString(text) ? text.replace(new RegExp(`^[${chars}]+`), '') : text;\n    }\n};\nLeftTrimPipe = __decorate([\n    Pipe({ name: 'ltrim' })\n], LeftTrimPipe);\n\nlet RepeatPipe = class RepeatPipe {\n    transform(str, n = 1, separator = '') {\n        if (n <= 0) {\n            throw new RangeError();\n        }\n        return n === 1 ? str : this.repeat(str, n - 1, separator);\n    }\n    repeat(str, n, separator) {\n        return isString(str) ? (n === 0 ? str : str + separator + this.repeat(str, n - 1, separator)) : str;\n    }\n};\nRepeatPipe = __decorate([\n    Pipe({ name: 'repeat' })\n], RepeatPipe);\n\nlet RightTrimPipe = class RightTrimPipe {\n    transform(text, chars = '\\\\s') {\n        return isString(text) ? text.replace(new RegExp(`[${chars}]+$`), '') : text;\n    }\n};\nRightTrimPipe = __decorate([\n    Pipe({ name: 'rtrim' })\n], RightTrimPipe);\n\nlet ScanPipe = class ScanPipe {\n    transform(text, args = []) {\n        return isString(text)\n            ? text.replace(/\\{(\\d+)}/g, (match, index) => (!isUndefined(args[index]) ? args[index] : match))\n            : text;\n    }\n};\nScanPipe = __decorate([\n    Pipe({ name: 'scan' })\n], ScanPipe);\n\nlet ShortenPipe = class ShortenPipe {\n    transform(text, length = 0, suffix = '', wordBreak = true) {\n        if (!isString(text)) {\n            return text;\n        }\n        if (text.length > length) {\n            if (wordBreak) {\n                return text.slice(0, length) + suffix;\n            }\n            // tslint:disable-next-line:no-bitwise\n            if (!!~text.indexOf(' ', length)) {\n                return text.slice(0, text.indexOf(' ', length)) + suffix;\n            }\n        }\n        return text;\n    }\n};\nShortenPipe = __decorate([\n    Pipe({ name: 'shorten' })\n], ShortenPipe);\n\nlet StripTagsPipe = class StripTagsPipe {\n    transform(text, ...allowedTags) {\n        return allowedTags.length > 0\n            ? text.replace(new RegExp(`<(?!\\/?(${allowedTags.join('|')})\\s*\\/?)[^>]+>`, 'g'), '')\n            : text.replace(/<(?:.|\\s)*?>/g, '');\n    }\n};\nStripTagsPipe = __decorate([\n    Pipe({ name: 'stripTags' })\n], StripTagsPipe);\n\nlet TrimPipe = class TrimPipe {\n    transform(text, chars = '\\\\s') {\n        return isString(text) ? text.replace(new RegExp(`^[${chars}]+|[${chars}]+$`, 'g'), '') : text;\n    }\n};\nTrimPipe = __decorate([\n    Pipe({ name: 'trim' })\n], TrimPipe);\n\nlet UcFirstPipe = class UcFirstPipe {\n    transform(text) {\n        return isString(text) ? ucFirst(text) : text;\n    }\n};\nUcFirstPipe = __decorate([\n    Pipe({ name: 'ucfirst' })\n], UcFirstPipe);\n\nlet SlugifyPipe = class SlugifyPipe {\n    transform(str) {\n        return isString(str)\n            ? str\n                .toLowerCase()\n                .trim()\n                .replace(/[^\\w\\-]+/g, ' ')\n                .replace(/\\s+/g, '-')\n            : str;\n    }\n};\nSlugifyPipe = __decorate([\n    Pipe({ name: 'slugify' })\n], SlugifyPipe);\n\nlet CamelizePipe = class CamelizePipe {\n    transform(text, chars = '\\\\s') {\n        if (!isString(text)) {\n            return text;\n        }\n        return text\n            .toLowerCase()\n            .split(/[-_\\s]/g)\n            .filter((v) => !!v)\n            .map((word, key) => {\n            return !key ? word : word.slice(0, 1).toUpperCase() + word.slice(1);\n        })\n            .join('');\n    }\n};\nCamelizePipe = __decorate([\n    Pipe({ name: 'camelize' })\n], CamelizePipe);\n\nlet LatinisePipe = class LatinisePipe {\n    constructor() {\n        // Source: http://semplicewebsites.com/removing-accents-javascript\n        // tslint:disable-next-line whitespace max-line-length object-literal-key-quotes\n        this.latinMap = {\n            'Á': 'A',\n            'Ă': 'A',\n            'Ắ': 'A',\n            'Ặ': 'A',\n            'Ằ': 'A',\n            'Ẳ': 'A',\n            'Ẵ': 'A',\n            'Ǎ': 'A',\n            'Â': 'A',\n            'Ấ': 'A',\n            'Ậ': 'A',\n            'Ầ': 'A',\n            'Ẩ': 'A',\n            'Ẫ': 'A',\n            'Ä': 'A',\n            'Ǟ': 'A',\n            'Ȧ': 'A',\n            'Ǡ': 'A',\n            'Ạ': 'A',\n            'Ȁ': 'A',\n            'À': 'A',\n            'Ả': 'A',\n            'Ȃ': 'A',\n            'Ā': 'A',\n            'Ą': 'A',\n            'Å': 'A',\n            'Ǻ': 'A',\n            'Ḁ': 'A',\n            'Ⱥ': 'A',\n            'Ã': 'A',\n            'Ꜳ': 'AA',\n            'Æ': 'AE',\n            'Ǽ': 'AE',\n            'Ǣ': 'AE',\n            'Ꜵ': 'AO',\n            'Ꜷ': 'AU',\n            'Ꜹ': 'AV',\n            'Ꜻ': 'AV',\n            'Ꜽ': 'AY',\n            'Ḃ': 'B',\n            'Ḅ': 'B',\n            'Ɓ': 'B',\n            'Ḇ': 'B',\n            'Ƀ': 'B',\n            'Ƃ': 'B',\n            'Ć': 'C',\n            'Č': 'C',\n            'Ç': 'C',\n            'Ḉ': 'C',\n            'Ĉ': 'C',\n            'Ċ': 'C',\n            'Ƈ': 'C',\n            'Ȼ': 'C',\n            'Ď': 'D',\n            'Ḑ': 'D',\n            'Ḓ': 'D',\n            'Ḋ': 'D',\n            'Ḍ': 'D',\n            'Ɗ': 'D',\n            'Ḏ': 'D',\n            'ǲ': 'D',\n            'ǅ': 'D',\n            'Đ': 'D',\n            'Ƌ': 'D',\n            'Ǳ': 'DZ',\n            'Ǆ': 'DZ',\n            'É': 'E',\n            'Ĕ': 'E',\n            'Ě': 'E',\n            'Ȩ': 'E',\n            'Ḝ': 'E',\n            'Ê': 'E',\n            'Ế': 'E',\n            'Ệ': 'E',\n            'Ề': 'E',\n            'Ể': 'E',\n            'Ễ': 'E',\n            'Ḙ': 'E',\n            'Ë': 'E',\n            'Ė': 'E',\n            'Ẹ': 'E',\n            'Ȅ': 'E',\n            'È': 'E',\n            'Ẻ': 'E',\n            'Ȇ': 'E',\n            'Ē': 'E',\n            'Ḗ': 'E',\n            'Ḕ': 'E',\n            'Ę': 'E',\n            'Ɇ': 'E',\n            'Ẽ': 'E',\n            'Ḛ': 'E',\n            'Ꝫ': 'ET',\n            'Ḟ': 'F',\n            'Ƒ': 'F',\n            'Ǵ': 'G',\n            'Ğ': 'G',\n            'Ǧ': 'G',\n            'Ģ': 'G',\n            'Ĝ': 'G',\n            'Ġ': 'G',\n            'Ɠ': 'G',\n            'Ḡ': 'G',\n            'Ǥ': 'G',\n            'Ḫ': 'H',\n            'Ȟ': 'H',\n            'Ḩ': 'H',\n            'Ĥ': 'H',\n            'Ⱨ': 'H',\n            'Ḧ': 'H',\n            'Ḣ': 'H',\n            'Ḥ': 'H',\n            'Ħ': 'H',\n            'Í': 'I',\n            'Ĭ': 'I',\n            'Ǐ': 'I',\n            'Î': 'I',\n            'Ï': 'I',\n            'Ḯ': 'I',\n            'İ': 'I',\n            'Ị': 'I',\n            'Ȉ': 'I',\n            'Ì': 'I',\n            'Ỉ': 'I',\n            'Ȋ': 'I',\n            'Ī': 'I',\n            'Į': 'I',\n            'Ɨ': 'I',\n            'Ĩ': 'I',\n            'Ḭ': 'I',\n            'Ꝺ': 'D',\n            'Ꝼ': 'F',\n            'Ᵹ': 'G',\n            'Ꞃ': 'R',\n            'Ꞅ': 'S',\n            'Ꞇ': 'T',\n            'Ꝭ': 'IS',\n            'Ĵ': 'J',\n            'Ɉ': 'J',\n            'Ḱ': 'K',\n            'Ǩ': 'K',\n            'Ķ': 'K',\n            'Ⱪ': 'K',\n            'Ꝃ': 'K',\n            'Ḳ': 'K',\n            'Ƙ': 'K',\n            'Ḵ': 'K',\n            'Ꝁ': 'K',\n            'Ꝅ': 'K',\n            'Ĺ': 'L',\n            'Ƚ': 'L',\n            'Ľ': 'L',\n            'Ļ': 'L',\n            'Ḽ': 'L',\n            'Ḷ': 'L',\n            'Ḹ': 'L',\n            'Ⱡ': 'L',\n            'Ꝉ': 'L',\n            'Ḻ': 'L',\n            'Ŀ': 'L',\n            'Ɫ': 'L',\n            'ǈ': 'L',\n            'Ł': 'L',\n            'Ǉ': 'LJ',\n            'Ḿ': 'M',\n            'Ṁ': 'M',\n            'Ṃ': 'M',\n            'Ɱ': 'M',\n            'Ń': 'N',\n            'Ň': 'N',\n            'Ņ': 'N',\n            'Ṋ': 'N',\n            'Ṅ': 'N',\n            'Ṇ': 'N',\n            'Ǹ': 'N',\n            'Ɲ': 'N',\n            'Ṉ': 'N',\n            'Ƞ': 'N',\n            'ǋ': 'N',\n            'Ñ': 'N',\n            'Ǌ': 'NJ',\n            'Ó': 'O',\n            'Ŏ': 'O',\n            'Ǒ': 'O',\n            'Ô': 'O',\n            'Ố': 'O',\n            'Ộ': 'O',\n            'Ồ': 'O',\n            'Ổ': 'O',\n            'Ỗ': 'O',\n            'Ö': 'O',\n            'Ȫ': 'O',\n            'Ȯ': 'O',\n            'Ȱ': 'O',\n            'Ọ': 'O',\n            'Ő': 'O',\n            'Ȍ': 'O',\n            'Ò': 'O',\n            'Ỏ': 'O',\n            'Ơ': 'O',\n            'Ớ': 'O',\n            'Ợ': 'O',\n            'Ờ': 'O',\n            'Ở': 'O',\n            'Ỡ': 'O',\n            'Ȏ': 'O',\n            'Ꝋ': 'O',\n            'Ꝍ': 'O',\n            'Ō': 'O',\n            'Ṓ': 'O',\n            'Ṑ': 'O',\n            'Ɵ': 'O',\n            'Ǫ': 'O',\n            'Ǭ': 'O',\n            'Ø': 'O',\n            'Ǿ': 'O',\n            'Õ': 'O',\n            'Ṍ': 'O',\n            'Ṏ': 'O',\n            'Ȭ': 'O',\n            'Ƣ': 'OI',\n            'Ꝏ': 'OO',\n            'Ɛ': 'E',\n            'Ɔ': 'O',\n            'Ȣ': 'OU',\n            'Ṕ': 'P',\n            'Ṗ': 'P',\n            'Ꝓ': 'P',\n            'Ƥ': 'P',\n            'Ꝕ': 'P',\n            'Ᵽ': 'P',\n            'Ꝑ': 'P',\n            'Ꝙ': 'Q',\n            'Ꝗ': 'Q',\n            'Ŕ': 'R',\n            'Ř': 'R',\n            'Ŗ': 'R',\n            'Ṙ': 'R',\n            'Ṛ': 'R',\n            'Ṝ': 'R',\n            'Ȑ': 'R',\n            'Ȓ': 'R',\n            'Ṟ': 'R',\n            'Ɍ': 'R',\n            'Ɽ': 'R',\n            'Ꜿ': 'C',\n            'Ǝ': 'E',\n            'Ś': 'S',\n            'Ṥ': 'S',\n            'Š': 'S',\n            'Ṧ': 'S',\n            'Ş': 'S',\n            'Ŝ': 'S',\n            'Ș': 'S',\n            'Ṡ': 'S',\n            'Ṣ': 'S',\n            'Ṩ': 'S',\n            'ẞ': 'SS',\n            'Ť': 'T',\n            'Ţ': 'T',\n            'Ṱ': 'T',\n            'Ț': 'T',\n            'Ⱦ': 'T',\n            'Ṫ': 'T',\n            'Ṭ': 'T',\n            'Ƭ': 'T',\n            'Ṯ': 'T',\n            'Ʈ': 'T',\n            'Ŧ': 'T',\n            'Ɐ': 'A',\n            'Ꞁ': 'L',\n            'Ɯ': 'M',\n            'Ʌ': 'V',\n            'Ꜩ': 'TZ',\n            'Ú': 'U',\n            'Ŭ': 'U',\n            'Ǔ': 'U',\n            'Û': 'U',\n            'Ṷ': 'U',\n            'Ü': 'U',\n            'Ǘ': 'U',\n            'Ǚ': 'U',\n            'Ǜ': 'U',\n            'Ǖ': 'U',\n            'Ṳ': 'U',\n            'Ụ': 'U',\n            'Ű': 'U',\n            'Ȕ': 'U',\n            'Ù': 'U',\n            'Ủ': 'U',\n            'Ư': 'U',\n            'Ứ': 'U',\n            'Ự': 'U',\n            'Ừ': 'U',\n            'Ử': 'U',\n            'Ữ': 'U',\n            'Ȗ': 'U',\n            'Ū': 'U',\n            'Ṻ': 'U',\n            'Ų': 'U',\n            'Ů': 'U',\n            'Ũ': 'U',\n            'Ṹ': 'U',\n            'Ṵ': 'U',\n            'Ꝟ': 'V',\n            'Ṿ': 'V',\n            'Ʋ': 'V',\n            'Ṽ': 'V',\n            'Ꝡ': 'VY',\n            'Ẃ': 'W',\n            'Ŵ': 'W',\n            'Ẅ': 'W',\n            'Ẇ': 'W',\n            'Ẉ': 'W',\n            'Ẁ': 'W',\n            'Ⱳ': 'W',\n            'Ẍ': 'X',\n            'Ẋ': 'X',\n            'Ý': 'Y',\n            'Ŷ': 'Y',\n            'Ÿ': 'Y',\n            'Ẏ': 'Y',\n            'Ỵ': 'Y',\n            'Ỳ': 'Y',\n            'Ƴ': 'Y',\n            'Ỷ': 'Y',\n            'Ỿ': 'Y',\n            'Ȳ': 'Y',\n            'Ɏ': 'Y',\n            'Ỹ': 'Y',\n            'Ź': 'Z',\n            'Ž': 'Z',\n            'Ẑ': 'Z',\n            'Ⱬ': 'Z',\n            'Ż': 'Z',\n            'Ẓ': 'Z',\n            'Ȥ': 'Z',\n            'Ẕ': 'Z',\n            'Ƶ': 'Z',\n            'Ĳ': 'IJ',\n            'Œ': 'OE',\n            'ᴀ': 'A',\n            'ᴁ': 'AE',\n            'ʙ': 'B',\n            'ᴃ': 'B',\n            'ᴄ': 'C',\n            'ᴅ': 'D',\n            'ᴇ': 'E',\n            'ꜰ': 'F',\n            'ɢ': 'G',\n            'ʛ': 'G',\n            'ʜ': 'H',\n            'ɪ': 'I',\n            'ʁ': 'R',\n            'ᴊ': 'J',\n            'ᴋ': 'K',\n            'ʟ': 'L',\n            'ᴌ': 'L',\n            'ᴍ': 'M',\n            'ɴ': 'N',\n            'ᴏ': 'O',\n            'ɶ': 'OE',\n            'ᴐ': 'O',\n            'ᴕ': 'OU',\n            'ᴘ': 'P',\n            'ʀ': 'R',\n            'ᴎ': 'N',\n            'ᴙ': 'R',\n            'ꜱ': 'S',\n            'ᴛ': 'T',\n            'ⱻ': 'E',\n            'ᴚ': 'R',\n            'ᴜ': 'U',\n            'ᴠ': 'V',\n            'ᴡ': 'W',\n            'ʏ': 'Y',\n            'ᴢ': 'Z',\n            'á': 'a',\n            'ă': 'a',\n            'ắ': 'a',\n            'ặ': 'a',\n            'ằ': 'a',\n            'ẳ': 'a',\n            'ẵ': 'a',\n            'ǎ': 'a',\n            'â': 'a',\n            'ấ': 'a',\n            'ậ': 'a',\n            'ầ': 'a',\n            'ẩ': 'a',\n            'ẫ': 'a',\n            'ä': 'a',\n            'ǟ': 'a',\n            'ȧ': 'a',\n            'ǡ': 'a',\n            'ạ': 'a',\n            'ȁ': 'a',\n            'à': 'a',\n            'ả': 'a',\n            'ȃ': 'a',\n            'ā': 'a',\n            'ą': 'a',\n            'ᶏ': 'a',\n            'ẚ': 'a',\n            'å': 'a',\n            'ǻ': 'a',\n            'ḁ': 'a',\n            'ⱥ': 'a',\n            'ã': 'a',\n            'ꜳ': 'aa',\n            'æ': 'ae',\n            'ǽ': 'ae',\n            'ǣ': 'ae',\n            'ꜵ': 'ao',\n            'ꜷ': 'au',\n            'ꜹ': 'av',\n            'ꜻ': 'av',\n            'ꜽ': 'ay',\n            'ḃ': 'b',\n            'ḅ': 'b',\n            'ɓ': 'b',\n            'ḇ': 'b',\n            'ᵬ': 'b',\n            'ᶀ': 'b',\n            'ƀ': 'b',\n            'ƃ': 'b',\n            'ɵ': 'o',\n            'ć': 'c',\n            'č': 'c',\n            'ç': 'c',\n            'ḉ': 'c',\n            'ĉ': 'c',\n            'ɕ': 'c',\n            'ċ': 'c',\n            'ƈ': 'c',\n            'ȼ': 'c',\n            'ď': 'd',\n            'ḑ': 'd',\n            'ḓ': 'd',\n            'ȡ': 'd',\n            'ḋ': 'd',\n            'ḍ': 'd',\n            'ɗ': 'd',\n            'ᶑ': 'd',\n            'ḏ': 'd',\n            'ᵭ': 'd',\n            'ᶁ': 'd',\n            'đ': 'd',\n            'ɖ': 'd',\n            'ƌ': 'd',\n            'ı': 'i',\n            'ȷ': 'j',\n            'ɟ': 'j',\n            'ʄ': 'j',\n            'ǳ': 'dz',\n            'ǆ': 'dz',\n            'é': 'e',\n            'ĕ': 'e',\n            'ě': 'e',\n            'ȩ': 'e',\n            'ḝ': 'e',\n            'ê': 'e',\n            'ế': 'e',\n            'ệ': 'e',\n            'ề': 'e',\n            'ể': 'e',\n            'ễ': 'e',\n            'ḙ': 'e',\n            'ë': 'e',\n            'ė': 'e',\n            'ẹ': 'e',\n            'ȅ': 'e',\n            'è': 'e',\n            'ẻ': 'e',\n            'ȇ': 'e',\n            'ē': 'e',\n            'ḗ': 'e',\n            'ḕ': 'e',\n            'ⱸ': 'e',\n            'ę': 'e',\n            'ᶒ': 'e',\n            'ɇ': 'e',\n            'ẽ': 'e',\n            'ḛ': 'e',\n            'ꝫ': 'et',\n            'ḟ': 'f',\n            'ƒ': 'f',\n            'ᵮ': 'f',\n            'ᶂ': 'f',\n            'ǵ': 'g',\n            'ğ': 'g',\n            'ǧ': 'g',\n            'ģ': 'g',\n            'ĝ': 'g',\n            'ġ': 'g',\n            'ɠ': 'g',\n            'ḡ': 'g',\n            'ᶃ': 'g',\n            'ǥ': 'g',\n            'ḫ': 'h',\n            'ȟ': 'h',\n            'ḩ': 'h',\n            'ĥ': 'h',\n            'ⱨ': 'h',\n            'ḧ': 'h',\n            'ḣ': 'h',\n            'ḥ': 'h',\n            'ɦ': 'h',\n            'ẖ': 'h',\n            'ħ': 'h',\n            'ƕ': 'hv',\n            'í': 'i',\n            'ĭ': 'i',\n            'ǐ': 'i',\n            'î': 'i',\n            'ï': 'i',\n            'ḯ': 'i',\n            'ị': 'i',\n            'ȉ': 'i',\n            'ì': 'i',\n            'ỉ': 'i',\n            'ȋ': 'i',\n            'ī': 'i',\n            'į': 'i',\n            'ᶖ': 'i',\n            'ɨ': 'i',\n            'ĩ': 'i',\n            'ḭ': 'i',\n            'ꝺ': 'd',\n            'ꝼ': 'f',\n            'ᵹ': 'g',\n            'ꞃ': 'r',\n            'ꞅ': 's',\n            'ꞇ': 't',\n            'ꝭ': 'is',\n            'ǰ': 'j',\n            'ĵ': 'j',\n            'ʝ': 'j',\n            'ɉ': 'j',\n            'ḱ': 'k',\n            'ǩ': 'k',\n            'ķ': 'k',\n            'ⱪ': 'k',\n            'ꝃ': 'k',\n            'ḳ': 'k',\n            'ƙ': 'k',\n            'ḵ': 'k',\n            'ᶄ': 'k',\n            'ꝁ': 'k',\n            'ꝅ': 'k',\n            'ĺ': 'l',\n            'ƚ': 'l',\n            'ɬ': 'l',\n            'ľ': 'l',\n            'ļ': 'l',\n            'ḽ': 'l',\n            'ȴ': 'l',\n            'ḷ': 'l',\n            'ḹ': 'l',\n            'ⱡ': 'l',\n            'ꝉ': 'l',\n            'ḻ': 'l',\n            'ŀ': 'l',\n            'ɫ': 'l',\n            'ᶅ': 'l',\n            'ɭ': 'l',\n            'ł': 'l',\n            'ǉ': 'lj',\n            'ſ': 's',\n            'ẜ': 's',\n            'ẛ': 's',\n            'ẝ': 's',\n            'ḿ': 'm',\n            'ṁ': 'm',\n            'ṃ': 'm',\n            'ɱ': 'm',\n            'ᵯ': 'm',\n            'ᶆ': 'm',\n            'ń': 'n',\n            'ň': 'n',\n            'ņ': 'n',\n            'ṋ': 'n',\n            'ȵ': 'n',\n            'ṅ': 'n',\n            'ṇ': 'n',\n            'ǹ': 'n',\n            'ɲ': 'n',\n            'ṉ': 'n',\n            'ƞ': 'n',\n            'ᵰ': 'n',\n            'ᶇ': 'n',\n            'ɳ': 'n',\n            'ñ': 'n',\n            'ǌ': 'nj',\n            'ó': 'o',\n            'ŏ': 'o',\n            'ǒ': 'o',\n            'ô': 'o',\n            'ố': 'o',\n            'ộ': 'o',\n            'ồ': 'o',\n            'ổ': 'o',\n            'ỗ': 'o',\n            'ö': 'o',\n            'ȫ': 'o',\n            'ȯ': 'o',\n            'ȱ': 'o',\n            'ọ': 'o',\n            'ő': 'o',\n            'ȍ': 'o',\n            'ò': 'o',\n            'ỏ': 'o',\n            'ơ': 'o',\n            'ớ': 'o',\n            'ợ': 'o',\n            'ờ': 'o',\n            'ở': 'o',\n            'ỡ': 'o',\n            'ȏ': 'o',\n            'ꝋ': 'o',\n            'ꝍ': 'o',\n            'ⱺ': 'o',\n            'ō': 'o',\n            'ṓ': 'o',\n            'ṑ': 'o',\n            'ǫ': 'o',\n            'ǭ': 'o',\n            'ø': 'o',\n            'ǿ': 'o',\n            'õ': 'o',\n            'ṍ': 'o',\n            'ṏ': 'o',\n            'ȭ': 'o',\n            'ƣ': 'oi',\n            'ꝏ': 'oo',\n            'ɛ': 'e',\n            'ᶓ': 'e',\n            'ɔ': 'o',\n            'ᶗ': 'o',\n            'ȣ': 'ou',\n            'ṕ': 'p',\n            'ṗ': 'p',\n            'ꝓ': 'p',\n            'ƥ': 'p',\n            'ᵱ': 'p',\n            'ᶈ': 'p',\n            'ꝕ': 'p',\n            'ᵽ': 'p',\n            'ꝑ': 'p',\n            'ꝙ': 'q',\n            'ʠ': 'q',\n            'ɋ': 'q',\n            'ꝗ': 'q',\n            'ŕ': 'r',\n            'ř': 'r',\n            'ŗ': 'r',\n            'ṙ': 'r',\n            'ṛ': 'r',\n            'ṝ': 'r',\n            'ȑ': 'r',\n            'ɾ': 'r',\n            'ᵳ': 'r',\n            'ȓ': 'r',\n            'ṟ': 'r',\n            'ɼ': 'r',\n            'ᵲ': 'r',\n            'ᶉ': 'r',\n            'ɍ': 'r',\n            'ɽ': 'r',\n            'ↄ': 'c',\n            'ꜿ': 'c',\n            'ɘ': 'e',\n            'ɿ': 'r',\n            'ś': 's',\n            'ṥ': 's',\n            'š': 's',\n            'ṧ': 's',\n            'ş': 's',\n            'ŝ': 's',\n            'ș': 's',\n            'ṡ': 's',\n            'ṣ': 's',\n            'ṩ': 's',\n            'ʂ': 's',\n            'ᵴ': 's',\n            'ᶊ': 's',\n            'ȿ': 's',\n            'ɡ': 'g',\n            'ß': 'ss',\n            'ᴑ': 'o',\n            'ᴓ': 'o',\n            'ᴝ': 'u',\n            'ť': 't',\n            'ţ': 't',\n            'ṱ': 't',\n            'ț': 't',\n            'ȶ': 't',\n            'ẗ': 't',\n            'ⱦ': 't',\n            'ṫ': 't',\n            'ṭ': 't',\n            'ƭ': 't',\n            'ṯ': 't',\n            'ᵵ': 't',\n            'ƫ': 't',\n            'ʈ': 't',\n            'ŧ': 't',\n            'ᵺ': 'th',\n            'ɐ': 'a',\n            'ᴂ': 'ae',\n            'ǝ': 'e',\n            'ᵷ': 'g',\n            'ɥ': 'h',\n            'ʮ': 'h',\n            'ʯ': 'h',\n            'ᴉ': 'i',\n            'ʞ': 'k',\n            'ꞁ': 'l',\n            'ɯ': 'm',\n            'ɰ': 'm',\n            'ᴔ': 'oe',\n            'ɹ': 'r',\n            'ɻ': 'r',\n            'ɺ': 'r',\n            'ⱹ': 'r',\n            'ʇ': 't',\n            'ʌ': 'v',\n            'ʍ': 'w',\n            'ʎ': 'y',\n            'ꜩ': 'tz',\n            'ú': 'u',\n            'ŭ': 'u',\n            'ǔ': 'u',\n            'û': 'u',\n            'ṷ': 'u',\n            'ü': 'u',\n            'ǘ': 'u',\n            'ǚ': 'u',\n            'ǜ': 'u',\n            'ǖ': 'u',\n            'ṳ': 'u',\n            'ụ': 'u',\n            'ű': 'u',\n            'ȕ': 'u',\n            'ù': 'u',\n            'ủ': 'u',\n            'ư': 'u',\n            'ứ': 'u',\n            'ự': 'u',\n            'ừ': 'u',\n            'ử': 'u',\n            'ữ': 'u',\n            'ȗ': 'u',\n            'ū': 'u',\n            'ṻ': 'u',\n            'ų': 'u',\n            'ᶙ': 'u',\n            'ů': 'u',\n            'ũ': 'u',\n            'ṹ': 'u',\n            'ṵ': 'u',\n            'ᵫ': 'ue',\n            'ꝸ': 'um',\n            'ⱴ': 'v',\n            'ꝟ': 'v',\n            'ṿ': 'v',\n            'ʋ': 'v',\n            'ᶌ': 'v',\n            'ⱱ': 'v',\n            'ṽ': 'v',\n            'ꝡ': 'vy',\n            'ẃ': 'w',\n            'ŵ': 'w',\n            'ẅ': 'w',\n            'ẇ': 'w',\n            'ẉ': 'w',\n            'ẁ': 'w',\n            'ⱳ': 'w',\n            'ẘ': 'w',\n            'ẍ': 'x',\n            'ẋ': 'x',\n            'ᶍ': 'x',\n            'ý': 'y',\n            'ŷ': 'y',\n            'ÿ': 'y',\n            'ẏ': 'y',\n            'ỵ': 'y',\n            'ỳ': 'y',\n            'ƴ': 'y',\n            'ỷ': 'y',\n            'ỿ': 'y',\n            'ȳ': 'y',\n            'ẙ': 'y',\n            'ɏ': 'y',\n            'ỹ': 'y',\n            'ź': 'z',\n            'ž': 'z',\n            'ẑ': 'z',\n            'ʑ': 'z',\n            'ⱬ': 'z',\n            'ż': 'z',\n            'ẓ': 'z',\n            'ȥ': 'z',\n            'ẕ': 'z',\n            'ᵶ': 'z',\n            'ᶎ': 'z',\n            'ʐ': 'z',\n            'ƶ': 'z',\n            'ɀ': 'z',\n            'ﬀ': 'ff',\n            'ﬃ': 'ffi',\n            'ﬄ': 'ffl',\n            'ﬁ': 'fi',\n            'ﬂ': 'fl',\n            'ĳ': 'ij',\n            'œ': 'oe',\n            'ﬆ': 'st',\n            'ₐ': 'a',\n            'ₑ': 'e',\n            'ᵢ': 'i',\n            'ⱼ': 'j',\n            'ₒ': 'o',\n            'ᵣ': 'r',\n            'ᵤ': 'u',\n            'ᵥ': 'v',\n            'ₓ': 'x',\n        };\n    }\n    transform(text, chars = '\\\\s') {\n        return isString(text)\n            ? text.replace(/[^A-Za-z0-9]/g, (key) => {\n                return this.latinMap[key] || key;\n            })\n            : text;\n    }\n};\nLatinisePipe = __decorate([\n    Pipe({ name: 'latinise' })\n], LatinisePipe);\n\nlet LinesPipe = class LinesPipe {\n    transform(text, chars = '\\\\s') {\n        return isString(text) ? text.replace(/\\r\\n/g, '\\n').split('\\n') : text;\n    }\n};\nLinesPipe = __decorate([\n    Pipe({ name: 'lines' })\n], LinesPipe);\n\nlet UnderscorePipe = class UnderscorePipe {\n    transform(text, chars = '\\\\s') {\n        return isString(text)\n            ? text\n                .trim()\n                .replace(/\\s+/g, '')\n                .replace(/[A-Z]/g, (c, k) => {\n                return k ? `_${c.toLowerCase()}` : c.toLowerCase();\n            })\n            : text;\n    }\n};\nUnderscorePipe = __decorate([\n    Pipe({ name: 'underscore' })\n], UnderscorePipe);\n\nlet MatchPipe = class MatchPipe {\n    transform(text, pattern, flags) {\n        if (!isString(text)) {\n            return text;\n        }\n        return text.match(new RegExp(pattern, flags));\n    }\n};\nMatchPipe = __decorate([\n    Pipe({ name: 'match' })\n], MatchPipe);\n\nlet TestPipe = class TestPipe {\n    transform(text, pattern, flags) {\n        if (!isString(text)) {\n            return text;\n        }\n        return new RegExp(pattern, flags).test(text);\n    }\n};\nTestPipe = __decorate([\n    Pipe({ name: 'test' })\n], TestPipe);\n\nlet LeftPadPipe = class LeftPadPipe {\n    transform(str, length, padCharacter = ' ') {\n        if (!isString(str) || str.length >= length) {\n            return str;\n        }\n        while (str.length < length) {\n            str = padCharacter + str;\n        }\n        return str;\n    }\n};\nLeftPadPipe = __decorate([\n    Pipe({ name: 'lpad' })\n], LeftPadPipe);\n\nlet RightPadPipe = class RightPadPipe {\n    transform(str, length = 1, padCharacter = ' ') {\n        if (!isString(str) || str.length >= length) {\n            return str;\n        }\n        while (str.length < length) {\n            str = str + padCharacter;\n        }\n        return str;\n    }\n};\nRightPadPipe = __decorate([\n    Pipe({ name: 'rpad' })\n], RightPadPipe);\n\nlet MakePluralStringPipe = \n/**\n * Takes a singular entity string and pluralizes it.\n * Uses both naive and holdout-list approaches.\n * If several words appear in the string, only the last word is pluralized -- this\n * means that if \"your story\" was passed in, \"your stories\" would be passed out.\n *\n * @param {string} singularEntity - Entity to pluralize. Pass as a singular ('story' or 'house').\n *          NOTE: The last word is examined. So you can pass in e.g. 'my story'.\n * @param {number} [quantity=0] quantity - How many of the entity are there? If left blank, this will\n *          pluralize the string (e.g. 'story' -> 'stories', 'house' -> 'houses'). If given a value,\n *          this will pluralize appropriately (e.g. ('story', 1) -> 'story', ('story', 2) -> 'stories').\n */\nclass MakePluralStringPipe {\n    constructor() {\n        this.irregularMap = {\n            addendum: 'addenda',\n            alga: 'algae',\n            alumna: 'alumnae',\n            alumnus: 'alumni',\n            analysis: 'analyses',\n            antenna: 'antennae',\n            appendix: 'appendices',\n            aquarium: 'aquaria',\n            arch: 'arches',\n            axe: 'axes',\n            axis: 'axes',\n            bacillus: 'bacilli',\n            bacterium: 'bacteria',\n            basis: 'bases',\n            batch: 'batches',\n            beach: 'beaches',\n            beau: 'beaux',\n            bison: 'bison',\n            brush: 'brushes',\n            buffalo: 'buffaloes',\n            bureau: 'bureaus',\n            bus: 'busses',\n            cactus: 'cacti',\n            calf: 'calves',\n            chateau: 'chateaux',\n            cherry: 'cherries',\n            child: 'children',\n            church: 'churches',\n            circus: 'circuses',\n            cod: 'cod',\n            corps: 'corps',\n            corpus: 'corpora',\n            crisis: 'crises',\n            criterion: 'criteria',\n            curriculum: 'curricula',\n            datum: 'data',\n            deer: 'deer',\n            diagnosis: 'diagnoses',\n            die: 'dice',\n            domino: 'dominoes',\n            dwarf: 'dwarves',\n            echo: 'echoes',\n            elf: 'elves',\n            ellipsis: 'ellipses',\n            embargo: 'embargoes',\n            emphasis: 'emphases',\n            erratum: 'errata',\n            fax: 'faxes',\n            fireman: 'firemen',\n            fish: 'fish',\n            flush: 'flushes',\n            focus: 'foci',\n            foot: 'feet',\n            formula: 'formulas',\n            fungus: 'fungi',\n            genus: 'genera',\n            goose: 'geese',\n            grafito: 'grafiti',\n            half: 'halves',\n            hero: 'heroes',\n            hoax: 'hoaxes',\n            hoof: 'hooves',\n            hypothesis: 'hypotheses',\n            index: 'indices',\n            kiss: 'kisses',\n            knife: 'knives',\n            leaf: 'leaves',\n            life: 'lives',\n            loaf: 'loaves',\n            louse: 'lice',\n            man: 'men',\n            mango: 'mangoes',\n            matrix: 'matrices',\n            means: 'means',\n            medium: 'media',\n            memorandum: 'memoranda',\n            millennium: 'milennia',\n            moose: 'moose',\n            mosquito: 'mosquitoes',\n            motto: 'mottoes',\n            mouse: 'mice',\n            nebula: 'nebulae',\n            neurosis: 'neuroses',\n            nucleus: 'nuclei',\n            oasis: 'oases',\n            octopus: 'octopodes',\n            ovum: 'ova',\n            ox: 'oxen',\n            paralysis: 'paralyses',\n            parenthesis: 'parentheses',\n            person: 'people',\n            phenomenon: 'phenomena',\n            plateau: 'plateaux',\n            potato: 'potatoes',\n            quiz: 'quizzes',\n            radius: 'radii',\n            reflex: 'reflexes',\n            'runner-up': 'runners-up',\n            scampo: 'scampi',\n            scarf: 'scarves',\n            scissors: 'scissors',\n            scratch: 'scratches',\n            self: 'selves',\n            series: 'series',\n            sheaf: 'sheaves',\n            sheep: 'sheep',\n            shelf: 'shelves',\n            'son-in-law': 'sons-in-law',\n            species: 'species',\n            splash: 'splashes',\n            stimulus: 'stimuli',\n            stitch: 'stitches',\n            stratum: 'strata',\n            syllabus: 'syllabi',\n            symposium: 'symposia',\n            synopsis: 'synopses',\n            synthesis: 'syntheses',\n            tableau: 'tableaux',\n            tax: 'taxes',\n            that: 'those',\n            thesis: 'theses',\n            thief: 'thieves',\n            this: 'these',\n            tomato: 'tomatoes',\n            tooth: 'teeth',\n            tornado: 'tornadoes',\n            torpedo: 'torpedoes',\n            vertebra: 'vertebrae',\n            veto: 'vetoes',\n            vita: 'vitae',\n            volcano: 'volcanoes',\n            waltz: 'waltzes',\n            wash: 'washes',\n            watch: 'watches',\n            wharf: 'wharves',\n            wife: 'wives',\n            wolf: 'wolves',\n            woman: 'women',\n            zero: 'zeroes',\n        };\n    }\n    transform(singularEntity, quantity = 0) {\n        if (!singularEntity || singularEntity === '') {\n            return '';\n        }\n        if (quantity === 1) {\n            return singularEntity;\n        }\n        else {\n            const lastWord = singularEntity.trim().split(' ')[singularEntity.trim().split(' ').length - 1];\n            if (this.irregularMap[lastWord.toLocaleLowerCase()]) {\n                if (lastWord[0] === lastWord[0].toLocaleUpperCase()) {\n                    return singularEntity.replace(lastWord, this.irregularMap[lastWord.toLocaleLowerCase()].replace(this.irregularMap[lastWord.toLocaleLowerCase()][0], this.irregularMap[lastWord.toLocaleLowerCase()][0].toLocaleUpperCase()));\n                }\n                return singularEntity.replace(lastWord, this.irregularMap[lastWord.toLocaleLowerCase()]);\n            }\n            else if (lastWord[lastWord.length - 1] === 'y') {\n                // Naive approach:\n                // consonant+y = word - 'y' +'ies'\n                // vowel+y = word + 's'\n                return isVowel(lastWord[lastWord.length - 2])\n                    ? singularEntity + 's'\n                    : singularEntity.replace(lastWord, lastWord.slice(0, -1) + 'ies');\n            }\n            else if (lastWord[lastWord.length - 1] === 's') {\n                return singularEntity + 'es';\n            }\n            else {\n                return singularEntity + 's';\n            }\n        }\n    }\n};\nMakePluralStringPipe = __decorate([\n    Pipe({\n        name: 'makePluralString',\n    })\n    /**\n     * Takes a singular entity string and pluralizes it.\n     * Uses both naive and holdout-list approaches.\n     * If several words appear in the string, only the last word is pluralized -- this\n     * means that if \"your story\" was passed in, \"your stories\" would be passed out.\n     *\n     * @param {string} singularEntity - Entity to pluralize. Pass as a singular ('story' or 'house').\n     *          NOTE: The last word is examined. So you can pass in e.g. 'my story'.\n     * @param {number} [quantity=0] quantity - How many of the entity are there? If left blank, this will\n     *          pluralize the string (e.g. 'story' -> 'stories', 'house' -> 'houses'). If given a value,\n     *          this will pluralize appropriately (e.g. ('story', 1) -> 'story', ('story', 2) -> 'stories').\n     */\n], MakePluralStringPipe);\n\nlet WrapPipe = class WrapPipe {\n    transform(str, prefix = '', suffix = '') {\n        if (!isString(str)) {\n            return str;\n        }\n        return (!!prefix && isString(prefix) ? prefix : '') + str + (!!suffix && isString(suffix) ? suffix : '');\n    }\n};\nWrapPipe = __decorate([\n    Pipe({ name: 'wrap' })\n], WrapPipe);\n\nconst STRING_PIPES = [\n    AorAnPipe,\n    LeftTrimPipe,\n    RepeatPipe,\n    RightTrimPipe,\n    ScanPipe,\n    ShortenPipe,\n    StripTagsPipe,\n    TrimPipe,\n    UcFirstPipe,\n    UcWordsPipe,\n    SlugifyPipe,\n    CamelizePipe,\n    LatinisePipe,\n    LinesPipe,\n    UnderscorePipe,\n    MatchPipe,\n    TestPipe,\n    LeftPadPipe,\n    RightPadPipe,\n    MakePluralStringPipe,\n    WrapPipe,\n];\nlet NgStringPipesModule = class NgStringPipesModule {\n};\nNgStringPipesModule = __decorate([\n    NgModule({\n        declarations: STRING_PIPES,\n        imports: [],\n        exports: STRING_PIPES,\n    })\n], NgStringPipesModule);\n\nlet MaxPipe = class MaxPipe {\n    transform(arr) {\n        return Array.isArray(arr) ? Math.max(...arr) : arr;\n    }\n};\nMaxPipe = __decorate([\n    Pipe({ name: 'max' })\n], MaxPipe);\n\nlet MinPipe = class MinPipe {\n    transform(arr) {\n        return Array.isArray(arr) ? Math.min(...arr) : arr;\n    }\n};\nMinPipe = __decorate([\n    Pipe({ name: 'min' })\n], MinPipe);\n\nlet PercentagePipe = class PercentagePipe {\n    transform(num, total = 100, floor = false) {\n        if (isNaN(num)) {\n            return num;\n        }\n        const percent = (num * 100) / total;\n        return floor ? Math.floor(percent) : percent;\n    }\n};\nPercentagePipe = __decorate([\n    Pipe({ name: 'percentage' })\n], PercentagePipe);\n\nlet SumPipe = class SumPipe {\n    transform(arr) {\n        return Array.isArray(arr) ? arr.reduce((sum, curr) => sum + curr, 0) : arr;\n    }\n};\nSumPipe = __decorate([\n    Pipe({ name: 'sum' })\n], SumPipe);\n\nlet FloorPipe = class FloorPipe {\n    transform(num, precision = 0) {\n        if (precision <= 0) {\n            return Math.floor(num);\n        }\n        const tho = Math.pow(10, precision);\n        return Math.floor(num * tho) / tho;\n    }\n};\nFloorPipe = __decorate([\n    Pipe({ name: 'floor' })\n], FloorPipe);\n\nlet RoundPipe = class RoundPipe {\n    transform(num, precision = 0) {\n        return applyPrecision(num, precision);\n    }\n};\nRoundPipe = __decorate([\n    Pipe({ name: 'round' })\n], RoundPipe);\n\nlet SqrtPipe = class SqrtPipe {\n    transform(num) {\n        return !isNaN(num) ? Math.sqrt(num) : num;\n    }\n};\nSqrtPipe = __decorate([\n    Pipe({ name: 'sqrt' })\n], SqrtPipe);\n\nlet PowerPipe = class PowerPipe {\n    transform(num, power = 2) {\n        return !isNaN(num) ? Math.pow(num, power) : num;\n    }\n};\nPowerPipe = __decorate([\n    Pipe({ name: 'pow' })\n], PowerPipe);\n\nlet CeilPipe = class CeilPipe {\n    transform(num, precision = 0) {\n        if (precision <= 0) {\n            return Math.ceil(num);\n        }\n        const tho = Math.pow(10, precision);\n        return Math.ceil(num * tho) / tho;\n    }\n};\nCeilPipe = __decorate([\n    Pipe({ name: 'ceil' })\n], CeilPipe);\n\nlet DegreesPipe = class DegreesPipe {\n    transform(radians) {\n        if (!isNumberFinite(radians)) {\n            return NaN;\n        }\n        return (radians * 180) / Math.PI;\n    }\n};\nDegreesPipe = __decorate([\n    Pipe({ name: 'degrees' })\n], DegreesPipe);\n\nlet BytesPipe = class BytesPipe {\n    constructor() {\n        this.dictionary = [\n            { max: 1024, type: 'B' },\n            { max: 1048576, type: 'KB' },\n            { max: 1073741824, type: 'MB' },\n            { max: 1.0995116e12, type: 'GB' },\n        ];\n    }\n    transform(value, precision) {\n        if (!isNumberFinite(value)) {\n            return NaN;\n        }\n        const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];\n        const calc = value / (format.max / 1024);\n        const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);\n        return `${num} ${format.type}`;\n    }\n};\nBytesPipe = __decorate([\n    Pipe({ name: 'bytes' })\n], BytesPipe);\n\nlet RadiansPipe = class RadiansPipe {\n    transform(degrees) {\n        if (!isNumberFinite(degrees)) {\n            return NaN;\n        }\n        return (degrees * Math.PI) / 180;\n    }\n};\nRadiansPipe = __decorate([\n    Pipe({ name: 'radians' })\n], RadiansPipe);\n\nconst MATH_PIPES = [\n    MaxPipe,\n    MinPipe,\n    PercentagePipe,\n    SumPipe,\n    FloorPipe,\n    RoundPipe,\n    SqrtPipe,\n    PowerPipe,\n    CeilPipe,\n    DegreesPipe,\n    BytesPipe,\n    RadiansPipe,\n];\nlet NgMathPipesModule = class NgMathPipesModule {\n};\nNgMathPipesModule = __decorate([\n    NgModule({\n        declarations: MATH_PIPES,\n        imports: [],\n        exports: MATH_PIPES,\n    })\n], NgMathPipesModule);\n\nlet IsDefinedPipe = class IsDefinedPipe {\n    transform(input) {\n        return !isUndefined(input);\n    }\n};\nIsDefinedPipe = __decorate([\n    Pipe({ name: 'isDefined' })\n], IsDefinedPipe);\n\nlet IsNullPipe = class IsNullPipe {\n    transform(input) {\n        return input === null;\n    }\n};\nIsNullPipe = __decorate([\n    Pipe({ name: 'isNull' })\n], IsNullPipe);\n\nlet IsUndefinedPipe = class IsUndefinedPipe {\n    transform(input) {\n        return isUndefined(input);\n    }\n};\nIsUndefinedPipe = __decorate([\n    Pipe({ name: 'isUndefined' })\n], IsUndefinedPipe);\n\nlet IsStringPipe = class IsStringPipe {\n    transform(input) {\n        return isString(input);\n    }\n};\nIsStringPipe = __decorate([\n    Pipe({ name: 'isString' })\n], IsStringPipe);\n\nlet IsFunctionPipe = class IsFunctionPipe {\n    transform(input) {\n        return isFunction(input);\n    }\n};\nIsFunctionPipe = __decorate([\n    Pipe({ name: 'isFunction' })\n], IsFunctionPipe);\n\nlet IsNumberPipe = class IsNumberPipe {\n    transform(input) {\n        return isNumber(input);\n    }\n};\nIsNumberPipe = __decorate([\n    Pipe({ name: 'isNumber' })\n], IsNumberPipe);\n\nlet IsArrayPipe = class IsArrayPipe {\n    transform(input) {\n        return Array.isArray(input);\n    }\n};\nIsArrayPipe = __decorate([\n    Pipe({ name: 'isArray' })\n], IsArrayPipe);\n\nlet IsObjectPipe = class IsObjectPipe {\n    transform(input) {\n        return isObject(input);\n    }\n};\nIsObjectPipe = __decorate([\n    Pipe({ name: 'isObject' })\n], IsObjectPipe);\n\nlet IsGreaterEqualThanPipe = class IsGreaterEqualThanPipe {\n    transform(input, other) {\n        return input >= other;\n    }\n};\nIsGreaterEqualThanPipe = __decorate([\n    Pipe({ name: 'isGreaterEqualThan' })\n], IsGreaterEqualThanPipe);\n\nlet IsGreaterThanPipe = class IsGreaterThanPipe {\n    transform(input, other) {\n        return input > other;\n    }\n};\nIsGreaterThanPipe = __decorate([\n    Pipe({ name: 'isGreaterThan' })\n], IsGreaterThanPipe);\n\nlet IsLessEqualThanPipe = class IsLessEqualThanPipe {\n    transform(input, other) {\n        return input <= other;\n    }\n};\nIsLessEqualThanPipe = __decorate([\n    Pipe({ name: 'isLessEqualThan' })\n], IsLessEqualThanPipe);\n\nlet IsEqualToPipe = class IsEqualToPipe {\n    transform(input, other) {\n        // tslint:disable-next-line:triple-equals\n        return input == other;\n    }\n};\nIsEqualToPipe = __decorate([\n    Pipe({ name: 'isEqualTo' })\n], IsEqualToPipe);\n\nlet IsNotEqualToPipe = class IsNotEqualToPipe {\n    transform(input, other) {\n        // tslint:disable-next-line:triple-equals\n        return input != other;\n    }\n};\nIsNotEqualToPipe = __decorate([\n    Pipe({ name: 'isNotEqualTo' })\n], IsNotEqualToPipe);\n\nlet IsIdenticalToPipe = class IsIdenticalToPipe {\n    transform(input, other) {\n        return input === other;\n    }\n};\nIsIdenticalToPipe = __decorate([\n    Pipe({ name: 'isIdenticalTo' })\n], IsIdenticalToPipe);\n\nlet IsNotIdenticalToPipe = class IsNotIdenticalToPipe {\n    transform(input, other) {\n        return input !== other;\n    }\n};\nIsNotIdenticalToPipe = __decorate([\n    Pipe({ name: 'isNotIdenticalTo' })\n], IsNotIdenticalToPipe);\n\nlet IsLessThanPipe = class IsLessThanPipe {\n    transform(input, other) {\n        return input < other;\n    }\n};\nIsLessThanPipe = __decorate([\n    Pipe({ name: 'isLessThan' })\n], IsLessThanPipe);\n\nconst BOOLEAN_PIPES = [\n    IsDefinedPipe,\n    IsNullPipe,\n    IsUndefinedPipe,\n    IsStringPipe,\n    IsFunctionPipe,\n    IsNumberPipe,\n    IsArrayPipe,\n    IsObjectPipe,\n    IsGreaterEqualThanPipe,\n    IsGreaterThanPipe,\n    IsLessEqualThanPipe,\n    IsLessEqualThanPipe,\n    IsEqualToPipe,\n    IsNotEqualToPipe,\n    IsIdenticalToPipe,\n    IsNotIdenticalToPipe,\n    IsLessThanPipe,\n];\nlet NgBooleanPipesModule = class NgBooleanPipesModule {\n};\nNgBooleanPipesModule = __decorate([\n    NgModule({\n        declarations: BOOLEAN_PIPES,\n        imports: [],\n        exports: BOOLEAN_PIPES,\n    })\n], NgBooleanPipesModule);\n\nvar TimeAgoPipe_1;\nlet TimeAgoPipe = TimeAgoPipe_1 = class TimeAgoPipe {\n    /**\n     * @param inputDate: Date | Moment - not included as TypeScript interface,\n     * in order to keep `ngx-pipes` \"pure\" from dependencies!\n     */\n    transform(inputDate) {\n        if (!inputDate || (!inputDate.getTime && !inputDate.toDate)) {\n            return 'Invalid date';\n        }\n        const past = inputDate.toDate ? inputDate.toDate() : inputDate.getTime();\n        const now = +new Date();\n        if (past > now) {\n            return 'in the future';\n        }\n        for (let i = 0, l = TimeAgoPipe_1.MAPPER.length, ms = now - past, div = TimeAgoPipe_1.YEAR_MS; i < l; ++i) {\n            const elm = TimeAgoPipe_1.MAPPER[i];\n            const unit = Math.floor(ms / (div /= elm.div));\n            if (unit >= 1) {\n                return unit === 1 ? elm.single : `${unit} ${elm.many} ago`;\n            }\n        }\n        return 'just now';\n    }\n};\nTimeAgoPipe.YEAR_MS = 1000 * 60 * 60 * 24 * 7 * 4 * 12;\nTimeAgoPipe.MAPPER = [\n    { single: 'last year', many: 'years', div: 1 },\n    { single: 'last month', many: 'months', div: 12 },\n    { single: 'last week', many: 'weeks', div: 4 },\n    { single: 'yesterday', many: 'days', div: 7 },\n    { single: 'an hour ago', many: 'hours', div: 24 },\n    { single: 'just now', many: 'minutes', div: 60 },\n];\nTimeAgoPipe = TimeAgoPipe_1 = __decorate([\n    Pipe({ name: 'timeAgo' })\n], TimeAgoPipe);\n\nconst DATE_PIPES = [TimeAgoPipe];\nlet NgDatePipesModule = class NgDatePipesModule {\n};\nNgDatePipesModule = __decorate([\n    NgModule({\n        declarations: DATE_PIPES,\n        imports: [],\n        exports: DATE_PIPES,\n    })\n], NgDatePipesModule);\n\nlet NgPipesModule = class NgPipesModule {\n};\nNgPipesModule = __decorate([\n    NgModule({\n        exports: [\n            NgArrayPipesModule,\n            NgStringPipesModule,\n            NgMathPipesModule,\n            NgBooleanPipesModule,\n            NgObjectPipesModule,\n            NgDatePipesModule,\n        ],\n    })\n], NgPipesModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AorAnPipe, BOOLEAN_PIPES, BytesPipe, CamelizePipe, CeilPipe, ChunkPipe, DATE_PIPES, DegreesPipe, DiffObjPipe, DiffPipe, EveryPipe, FilterByImpurePipe, FilterByPipe, FlattenPipe, FloorPipe, FromPairsPipe, GroupByImpurePipe, GroupByPipe, InitialPipe, IntersectionPipe, InvertByPipe, InvertPipe, IsArrayPipe, IsDefinedPipe, IsEqualToPipe, IsFunctionPipe, IsGreaterEqualThanPipe, IsGreaterThanPipe, IsIdenticalToPipe, IsLessEqualThanPipe, IsLessThanPipe, IsNotEqualToPipe, IsNotIdenticalToPipe, IsNullPipe, IsNumberPipe, IsObjectPipe, IsStringPipe, IsUndefinedPipe, KeysPipe, LatinisePipe, LeftPadPipe, LeftTrimPipe, LinesPipe, MATH_PIPES, MakePluralStringPipe, MatchPipe, MaxPipe, MinPipe, NgArrayPipesModule, NgBooleanPipesModule, NgDatePipesModule, NgMathPipesModule, NgObjectPipesModule, NgPipesModule, NgStringPipesModule, OmitPipe, OrderByImpurePipe, OrderByPipe, PairsPipe, PercentagePipe, PickPipe, PluckPipe, PowerPipe, RadiansPipe, RangePipe, RepeatPipe, ReversePipe, RightPadPipe, RightTrimPipe, RoundPipe, STRING_PIPES, SamplePipe, ScanPipe, ShortenPipe, ShufflePipe, SlugifyPipe, SomePipe, SqrtPipe, StripTagsPipe, SumPipe, TailPipe, TestPipe, TimeAgoPipe, TrimPipe, TrurthifyPipe, UcFirstPipe, UcWordsPipe, UnderscorePipe, UnionPipe, UniquePipe, ValuesPipe, WithoutPipe, WrapPipe, isString as ɵa };\n//# sourceMappingURL=ngx-pipes.js.map\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n          <img class=\\\"home_head\\\" src=\\\"../assets/icon/cities_of_delhi_toolbar_head.png\\\" width=\\\"165px\\\" align=\\\"middle\\\"/>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n   <ion-item class=\\\"accordion vertical\\\">\\r\\n    <ion-slides>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let post of posts\\\">\\r\\n            <input type=\\\"radio\\\" id=\\\"radio-{{post.ID}}\\\" name=\\\"radio-accordion\\\"/>\\r\\n            <label class=\\\"name_city\\\" for=\\\"radio-{{post.ID}}\\\" (click)=\\\"toggle()\\\" >{{post.post_title}}</label>\\r\\n            <!-- <ion-icon  [name]=\\\"visible? 'arrow-dropup-circle' : 'arrow-dropdown-circle'\\\" (click)=\\\"toggle()\\\"></ion-icon> -->\\r\\n            <hr>\\r\\n            <div class=\\\"content\\\">\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Indraprastha\\\"'>\\r\\n                <!-- <img src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/{{i + 1}}.jpg\\\" alt=\\\"\\\" /> -->\\r\\n                <!-- <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1834\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1843\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1845\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1847\\\" /> -->\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Ferozabad\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1851/564/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1853/565/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1855/566/0\\\" />\\r\\n                <!-- <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1905\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/5.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1911\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/6.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1913\\\" /> -->\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Jahapannah\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1841/562/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1849/563/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1857/567/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1859/568/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Lutyens\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1915/598/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1917/599/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1921/600/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1927/601/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/5.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1930/603/0\\\" />\\r\\n              </div>\\r\\n              \\r\\n               <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Mehrauli\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1795/543/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1805/545/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1810/547/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1812/548/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/5.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1814/549/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/6.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1816/550/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/7.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1818/551/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/8.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1820/552/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/9.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1822/553/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/10.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1828/556/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/11.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1830/557/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/12.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1832/558/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/13.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1864/570/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/14.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1868/572/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/15.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1901/591/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/16.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1907/594/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/17.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1909/595/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"New delhi\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1805/546/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1861/569/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1870/571/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1888/584/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/5.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1890/585/0\\\" />\\r\\n\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/6.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1892/587/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/7.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1894/588/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/8.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1897/589/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/9.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1932/604/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/Newdelhi/10.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1936/606/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Shahjahanabad\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1874/577/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1876/578/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1878/579/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1880/580/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/5.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1882/581/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/6.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1884/582/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/7.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1886/583/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/8.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1847/586/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/9.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1899/590/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/10.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1903/592/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/11.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1934/605/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Shergarh\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1870/573/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1872/574/0\\\" />\\r\\n                \\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Siri\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1824/554/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1826/555/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Tuglaqabad\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1808/544/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1836/560/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1839/561/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Jahapanah\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1841/562/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1849/563/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1857/567/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1859/568/0\\\" />\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\" *ngIf='post.post_title  === \\\"Civillines\\\"'>\\r\\n                \\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/1.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1905/593/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/2.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1911/596/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/3.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1913/597/0\\\" />\\r\\n                <img class=\\\"square_box\\\" src=\\\"/assets/red_board_cells/{{post.post_title | titlecase }}/4.jpg\\\" alt=\\\"\\\" routerLink=\\\"/post/1927/602/0\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- <button (click) = \\\"myClickFunction(post.ID)\\\">Click Me</button> -->\\r\\n        </li>\\r\\n    </ul>\\r\\n     </ion-slides>\\r\\n</ion-item>\\r\\n  \\r\\n    \\r\\n  <!--\\r\\n    <div *ngIf=\\\"selectedItem\\\" padding>\\r\\n      You navigated here from <b>{{selectedItem.title }}</b>\\r\\n    </div>\\r\\n  -->\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgPipesModule } from 'ngx-pipes';\nimport { CitiesOfDelhiPage } from './cities-of-delhi.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CitiesOfDelhiPage\n      }\n    ]),\n    NgPipesModule\n  ],\n  declarations: [CitiesOfDelhiPage]\n})\nexport class CitiesOfDelhiPageModule {}\n","export default \"/*\\n*\\n*    Author:    Michael Raffaele <michael@mraffaele.com>\\n*    Date:    25th October 2011\\n*    Info:     http://www.mraffaele.com/blog/2011/10/25/css-accordion-no-javascript/\\n*\\n*/\\n/* Shared for all accordion types */\\n#spana {\\n  /* the default for span */\\n}\\n.accordion {\\n  width: 100%;\\n  padding: 10px;\\n  background: #fff;\\n}\\n.accordion ul {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n.accordion li {\\n  margin: 0;\\n  padding: 0;\\n}\\n.accordion [type=radio], .accordion [type=checkbox] {\\n  display: none;\\n}\\n.accordion label {\\n  display: block;\\n  cursor: pointer;\\n  text-transform: uppercase;\\n  -webkit-transition: all 0.2s ease-out;\\n  -moz-transition: all 0.2s ease-out;\\n}\\n.accordion .content {\\n  padding: 0 10px;\\n  overflow: hidden;\\n  -webkit-transition: all 0.5s ease-out;\\n  -moz-transition: all 0.5s ease-out;\\n}\\n.accordion p {\\n  margin: 0 0 10px;\\n}\\n.accordion h3 {\\n  padding: 0;\\n  margin: 10px 0;\\n}\\n.home_head {\\n  font-size: 0.9rem;\\n  padding-top: 0.1rem;\\n  padding-left: 0.75rem;\\n}\\n/* Vertical */\\n.vertical ul li {\\n  overflow: hidden;\\n  margin: 0 0 1px;\\n}\\n.vertical ul li label {\\n  padding: 10px;\\n  text-transform: capitalize;\\n}\\n.vertical [type=radio]:checked ~ label, .vertical [type=checkbox]:checked ~ label {\\n  border-bottom: 0;\\n}\\n.vertical ul li .content {\\n  height: 0px;\\n  border-top: 0;\\n}\\n.vertical [type=radio]:checked ~ label ~ .content, .vertical [type=checkbox]:checked ~ label ~ .content {\\n  height: auto;\\n}\\n.square_box {\\n  width: 50%;\\n  margin-top: 10px;\\n  float: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2l0aWVzLW9mLWRlbGhpL0M6XFxVc2Vyc1xcV0lOXFxEZXNrdG9wXFx0ZXN0XFxjYW1lcmFhcHAxL3NyY1xcYXBwXFxjaXRpZXMtb2YtZGVsaGlcXGNpdGllcy1vZi1kZWxoaS5wYWdlLnNjc3MiLCJzcmMvYXBwL2NpdGllcy1vZi1kZWxoaS9jaXRpZXMtb2YtZGVsaGkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOzs7Ozs7Q0FBQTtBQVFBLG1DQUFBO0FBQ0E7RUFDQyx5QkFBQTtBQ0REO0FER0E7RUFFSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0FDREo7QURHQTtFQUNJLGdCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7QUNBSjtBREVBO0VBQ0ksU0FBQTtFQUNBLFVBQUE7QUNDSjtBRENBO0VBQ0ksYUFBQTtBQ0VKO0FEQUE7RUFDSSxjQUFBO0VBRUEsZUFBQTtFQUNBLHlCQUFBO0VBQ0EscUNBQUE7RUFDQSxrQ0FBQTtBQ0VKO0FER0E7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFFQSxxQ0FBQTtFQUNBLGtDQUFBO0FDREo7QURHQTtFQUVJLGdCQUFBO0FDREo7QURHQTtFQUVJLFVBQUE7RUFDQSxjQUFBO0FDREo7QURHQTtFQUNJLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtBQ0FKO0FESUEsYUFBQTtBQUNBO0VBQ0ksZ0JBQUE7RUFDQSxlQUFBO0FDREo7QURHQTtFQUNJLGFBQUE7RUFDQSwwQkFBQTtBQ0FKO0FERUE7RUFDSSxnQkFBQTtBQ0NKO0FESUE7RUFDSSxXQUFBO0VBQ0EsYUFBQTtBQ0RKO0FER0E7RUFDSSxZQUFBO0FDQUo7QURHQTtFQUNJLFVBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2NpdGllcy1vZi1kZWxoaS9jaXRpZXMtb2YtZGVsaGkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKlxuKlxuKiAgICBBdXRob3I6ICAgIE1pY2hhZWwgUmFmZmFlbGUgPG1pY2hhZWxAbXJhZmZhZWxlLmNvbT5cbiogICAgRGF0ZTogICAgMjV0aCBPY3RvYmVyIDIwMTFcbiogICAgSW5mbzogICAgIGh0dHA6Ly93d3cubXJhZmZhZWxlLmNvbS9ibG9nLzIwMTEvMTAvMjUvY3NzLWFjY29yZGlvbi1uby1qYXZhc2NyaXB0L1xuKlxuKi9cblxuLyogU2hhcmVkIGZvciBhbGwgYWNjb3JkaW9uIHR5cGVzICovXG4jc3BhbmEge1xuIC8qIHRoZSBkZWZhdWx0IGZvciBzcGFuICovIFxufVxuLmFjY29yZGlvbiB7XG4gICAgXG4gICAgd2lkdGg6MTAwJTtcbiAgICBwYWRkaW5nOjEwcHg7XG4gICAgYmFja2dyb3VuZDojZmZmO1xufVxuLmFjY29yZGlvbiB1bCB7XG4gICAgbGlzdC1zdHlsZTpub25lO1xuICAgIG1hcmdpbjowO1xuICAgIHBhZGRpbmc6MDsgICAgXG59XG4uYWNjb3JkaW9uIGxpIHtcbiAgICBtYXJnaW46MDtcbiAgICBwYWRkaW5nOjA7XG59XG4uYWNjb3JkaW9uIFt0eXBlPXJhZGlvXSwgLmFjY29yZGlvbiBbdHlwZT1jaGVja2JveF0ge1xuICAgIGRpc3BsYXk6bm9uZTtcbn1cbi5hY2NvcmRpb24gbGFiZWwge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICBcbiAgICBjdXJzb3I6cG9pbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2Utb3V0O1xuICAgIC1tb3otdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlLW91dDtcbn1cbi5hY2NvcmRpb24gdWwgbGkgbGFiZWw6aG92ZXIsIC5hY2NvcmRpb24gW3R5cGU9cmFkaW9dOmNoZWNrZWQgfiBsYWJlbCwgLmFjY29yZGlvbiBbdHlwZT1jaGVja2JveF06Y2hlY2tlZCB+IGxhYmVsIHtcbiAgICBcbn1cbi5hY2NvcmRpb24gLmNvbnRlbnQge1xuICAgIHBhZGRpbmc6MCAxMHB4O1xuICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICBcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuNXMgZWFzZS1vdXQ7XG4gICAgLW1vei10cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2Utb3V0O1xufVxuLmFjY29yZGlvbiBwIHtcbiAgICBcbiAgICBtYXJnaW46MCAwIDEwcHg7XG59XG4uYWNjb3JkaW9uIGgzIHtcbiAgIFxuICAgIHBhZGRpbmc6MDtcbiAgICBtYXJnaW46MTBweCAwO1xufVxuLmhvbWVfaGVhZHtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICBwYWRkaW5nLXRvcDogMC4xcmVtO1xuICAgIHBhZGRpbmctbGVmdDogMC43NXJlbVxufVxuXG5cbi8qIFZlcnRpY2FsICovXG4udmVydGljYWwgdWwgbGkge1xuICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICBtYXJnaW46MCAwIDFweDtcbn1cbi52ZXJ0aWNhbCB1bCBsaSBsYWJlbCB7XG4gICAgcGFkZGluZzoxMHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuLnZlcnRpY2FsIFt0eXBlPXJhZGlvXTpjaGVja2VkIH4gbGFiZWwsIC52ZXJ0aWNhbCBbdHlwZT1jaGVja2JveF06Y2hlY2tlZCB+IGxhYmVsIHtcbiAgICBib3JkZXItYm90dG9tOjA7XG59XG4udmVydGljYWwgdWwgbGkgbGFiZWw6aG92ZXIge1xuICAgXG59XG4udmVydGljYWwgdWwgbGkgLmNvbnRlbnQge1xuICAgIGhlaWdodDowcHg7XG4gICAgYm9yZGVyLXRvcDowO1xufVxuLnZlcnRpY2FsIFt0eXBlPXJhZGlvXTpjaGVja2VkIH4gbGFiZWwgfiAuY29udGVudCwgLnZlcnRpY2FsIFt0eXBlPWNoZWNrYm94XTpjaGVja2VkIH4gbGFiZWwgfiAuY29udGVudCB7XG4gICAgaGVpZ2h0OmF1dG87XG4gICAgXG59XG4uc3F1YXJlX2JveHtcbiAgICB3aWR0aDo1MCU7XG4gICAgbWFyZ2luLXRvcDoxMHB4O1xuICAgIGZsb2F0OmxlZnQ7XG59IiwiLypcbipcbiogICAgQXV0aG9yOiAgICBNaWNoYWVsIFJhZmZhZWxlIDxtaWNoYWVsQG1yYWZmYWVsZS5jb20+XG4qICAgIERhdGU6ICAgIDI1dGggT2N0b2JlciAyMDExXG4qICAgIEluZm86ICAgICBodHRwOi8vd3d3Lm1yYWZmYWVsZS5jb20vYmxvZy8yMDExLzEwLzI1L2Nzcy1hY2NvcmRpb24tbm8tamF2YXNjcmlwdC9cbipcbiovXG4vKiBTaGFyZWQgZm9yIGFsbCBhY2NvcmRpb24gdHlwZXMgKi9cbiNzcGFuYSB7XG4gIC8qIHRoZSBkZWZhdWx0IGZvciBzcGFuICovXG59XG5cbi5hY2NvcmRpb24ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLmFjY29yZGlvbiB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLmFjY29yZGlvbiBsaSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLmFjY29yZGlvbiBbdHlwZT1yYWRpb10sIC5hY2NvcmRpb24gW3R5cGU9Y2hlY2tib3hdIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmFjY29yZGlvbiBsYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1vdXQ7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1vdXQ7XG59XG5cbi5hY2NvcmRpb24gLmNvbnRlbnQge1xuICBwYWRkaW5nOiAwIDEwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1vdXQ7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1vdXQ7XG59XG5cbi5hY2NvcmRpb24gcCB7XG4gIG1hcmdpbjogMCAwIDEwcHg7XG59XG5cbi5hY2NvcmRpb24gaDMge1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDEwcHggMDtcbn1cblxuLmhvbWVfaGVhZCB7XG4gIGZvbnQtc2l6ZTogMC45cmVtO1xuICBwYWRkaW5nLXRvcDogMC4xcmVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNzVyZW07XG59XG5cbi8qIFZlcnRpY2FsICovXG4udmVydGljYWwgdWwgbGkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW46IDAgMCAxcHg7XG59XG5cbi52ZXJ0aWNhbCB1bCBsaSBsYWJlbCB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4udmVydGljYWwgW3R5cGU9cmFkaW9dOmNoZWNrZWQgfiBsYWJlbCwgLnZlcnRpY2FsIFt0eXBlPWNoZWNrYm94XTpjaGVja2VkIH4gbGFiZWwge1xuICBib3JkZXItYm90dG9tOiAwO1xufVxuXG4udmVydGljYWwgdWwgbGkgLmNvbnRlbnQge1xuICBoZWlnaHQ6IDBweDtcbiAgYm9yZGVyLXRvcDogMDtcbn1cblxuLnZlcnRpY2FsIFt0eXBlPXJhZGlvXTpjaGVja2VkIH4gbGFiZWwgfiAuY29udGVudCwgLnZlcnRpY2FsIFt0eXBlPWNoZWNrYm94XTpjaGVja2VkIH4gbGFiZWwgfiAuY29udGVudCB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLnNxdWFyZV9ib3gge1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBmbG9hdDogbGVmdDtcbn0iXX0= */\"","import { Component, OnInit,ViewChildren,QueryList } from '@angular/core';\nimport { NavController,NavParams } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { LoadingController } from '@ionic/angular';\nimport { Platform } from '@ionic/angular';\nimport {Router} from '@angular/router';\nimport { ToastController,IonRouterOutlet } from '@ionic/angular';\nimport {NgPipesModule} from 'ngx-pipes';\n@Component({\n  selector: 'app-citiesofdelhi',\n  templateUrl: 'cities-of-delhi.page.html',\n  styleUrls: ['cities-of-delhi.page.scss']\n})\nexport class CitiesOfDelhiPage implements OnInit {\n  \n    isLoading = false; \n    posts: any;\n    backsub:any;\n    lastTimeBackPress = 0;\n  timePeriodToExit = 2000;\n  @ViewChildren(IonRouterOutlet) routerOutlets: QueryList<IonRouterOutlet>;\n    constructor(public navCtrl: NavController,public toastController: ToastController,private router: Router,public platform: Platform,public loadingCtrl:LoadingController,private http: HttpClient) {\n         /* alert(\"hiii\");*/\n             this.loadingPresent();\n              this.http.get('https://riwayatedilli.com/site/wp-json/wp/v2/fetch/postbyparent/161').subscribe(data => {\n               this.posts = data;\n               this.loadingdismiss();\n              },error=>{\n                  this.loadingdismiss();\n                  this.presentToast();           \n\n              });\n          //   loading.present();\n          // })\n          // loading.catch\n          \n  }\n  ngOnDestroy(){ \n    // console.log(\"dismissed\");\n    this.loadingdismiss();\n  }\n  goback(){\n    this.navCtrl.back();\n  }\n // async backbttsub()\n //  {\n\n //    this.backsub=this.platform.backButton.subscribeWithPriority(666666,()=>{\n //              if(this.isLoading==true)\n //              {\n //                this.loadingdismiss();\n //              }\n              \n //              this.navCtrl.back(); \n //             });\n\n\n //    return await this.backbttsub().then(()=>console.log('subscribed')); \n //  }\n //  async backbttunsub(){\n //    return await this.backsub.unsubscribe().then(()=>console.log('unsunscribed'));\n //  }\n\n myClickFunction(postTitle){\n  // alert(postTitle);\n  this.navCtrl.navigateForward('/post-detail/..12');\n}\n removeHTMLInfo(value: string)\n{  \n    if (value)\n\n        return value.replace(/<\\/?[^>]+>/gi, \"\");\n}\n\n\n// goBack()\n// {\n//   this.router.navigateByUrl('/home');\n// }\nvisible = false;\n  toggle() {\n   this.visible = !this.visible;\n  }\n\n   async loadingPresent() {\n    this.isLoading = true;\n    return await this.loadingCtrl.create({\n      message:\"Please wait until data is loaded\",\n    }).then(a => {\n      a.present().then(() => {\n        console.log('presented');\n        if (!this.isLoading) {\n          a.dismiss().then(() => console.log('abort presenting'));\n        }\n      });\n    });\n  }\n  async loadingdismiss() {\n    this.isLoading = false;\n    return await this.loadingCtrl.dismiss().then(() => console.log('dismissed'));\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'No Internet Connection or Data not found',\n      duration: 2000,\n      position:\"middle\",\n      color:\"primary\"\n    });\n    toast.present();\n  }\n\n  \n  ngOnInit() {\n  }\n  // add back when alpha.4 is out\n  // navigate(item) {\n  //   this.router.navigate(['/list', JSON.stringify(item)]);\n  // }\n}\n"],"sourceRoot":"webpack:///"}